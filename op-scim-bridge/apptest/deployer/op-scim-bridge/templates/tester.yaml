apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-tester"
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
  annotations:
    helm.sh/hook: test-success
    marketplace.cloud.google.com/verification: test
spec:
  serviceAccountName: {{ .Release.Name }}-deployer-sa
  containers:
  - name: tester
    image: "{{ .Values.tester.image }}"
    imagePullPolicy: Always
    volumeMounts:
    - name: config-volume
      mountPath: /tester
    command: ["sh"]
    args: ["/tester/run.sh"]
    env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: APP_INSTANCE_NAME
      value: {{ .Release.Name }}
  restartPolicy: Never
  volumes:
  - name: config-volume
    configMap:
      name: "{{ .Release.Name }}-test"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-test"
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
  annotations:
    helm.sh/hook: test-success
    marketplace.cloud.google.com/verification: test
data:
  run.sh: |-
    set -e
    endpoint="{{ .Release.Name }}-bridge-svc"
    echo "GET http://$endpoint/ping"
    ping_response=$(curl --silent --show-error "http://$endpoint/ping")
    if [[ "$ping_response" == "pong" ]]; then
      echo SUCCESS
      exit 0
    else
      echo FAILURE
      exit 1
    fi
