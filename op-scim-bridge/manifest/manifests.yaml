---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: $APP_INSTANCE_NAME-op-scim-bridge-pvc
  labels:
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: op-scim-bridge-server
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: $APP_INSTANCE_NAME-redis
  labels: &RedisDeploymentLabels
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: op-scim-bridge-redis
spec:
  selector:
    matchLabels: *RedisDeploymentLabels
  replicas: 1
  template:
    metadata:
      labels: *RedisDeploymentLabels
    spec:
      containers:
      - name: redis
        image: $IMAGE_REDIS
        imagePullPolicy: Always
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-redis-svc
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: op-scim-bridge-redis
spec:
  ports:
  - name: redis
    port: 6379
  selector:
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: op-scim-bridge-redis
  clusterIP: None
---
apiVersion: v1
kind: Secret
metadata:
  name: $APP_INSTANCE_NAME-op-scim-bridge-secret
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: op-scim-bridge-server
stringData:
  op-domain: $OP_ACCOUNT_DOMAIN
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: $APP_INSTANCE_NAME-op-scim-bridge
  labels: &ScimDeploymentLabels
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: op-scim-bridge-server
spec:
  selector:
    matchLabels: *ScimDeploymentLabels
  replicas: 1
  template:
    metadata:
      labels: *ScimDeploymentLabels
    spec:
      containers:
      - name: op-scim-bridge
        image: $IMAGE_SCIM_BRIDGE
        imagePullPolicy: Always
        command: ["/op-scim/op-scim"]
        args: ["--redis-host=$APP_INSTANCE_NAME-redis-svc"]
        env:
        - name: OP_ACCOUNT_DOMAIN
          valueFrom:
            secretKeyRef:
              name: $APP_INSTANCE_NAME-op-scim-bridge-secret
              key: op-domain
        ports:
        - containerPort: 3002
        volumeMounts:
        - name: $APP_INSTANCE_NAME-op-scim-bridge-pvc
          mountPath: "/secret"
          readOnly: false
        readinessProbe:
          httpGet:
            path: /ping
            port: 3002
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /ping
            port: 3002
          initialDelaySeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: $APP_INSTANCE_NAME-op-scim-bridge-pvc
        persistentVolumeClaim:
          claimName: $APP_INSTANCE_NAME-op-scim-bridge-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-op-scim-bridge-svc
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: op-scim-bridge-server
spec:
  ports:
  - name: http
    port: 3002
    protocol: TCP
    targetPort: 3002
  # - name: scim-bridge-https-port
  #   port: 443
  #   protocol: TCP
  #   targetPort: 8443
  selector:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: op-scim-bridge-server
  type: LoadBalancer
